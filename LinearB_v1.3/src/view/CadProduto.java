/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.FornecedorDAO;
import control.ProdutoDAO;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collection;
import java.util.Date;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import model.Fornecedor;
import model.JFHelper;
import model.Produto;

/**
 *
 * @author Felipe
 */
public class CadProduto extends javax.swing.JDialog {

    /**
     * Creates new form CadProduto
     */
    public CadProduto(java.awt.Frame parent, boolean modal) throws SQLException {
        super(parent, modal);
        initComponents();
        produtos = new LinkedList<>();
        ids = 1;
        pdao = new ProdutoDAO();
        fields = new JTextField[]{jTFNome, jTFPreco, jTFQtd};
        ffields = new JFormattedTextField[]{jFTFDataEntrada, jFTFDataValidade};
        cbs = new JComboBox[]{jCBFornecedor};
        t = new DefaultTableModel();
        t = (DefaultTableModel) jTable1.getModel();

        // ********** Aplicando os fornecedores ao jCBFornecedor **********
        fdao = new FornecedorDAO();
        fnc = fdao.buscarTudo();
        for (int x = 0; x < fnc.size(); x++) {
            jCBFornecedor.addItem(fnc.get(x).getNome());
        }

        // ********** Colocando a data atual como entrada padrão do jFTFDataEntrada **********
        jFTFDataEntrada.setText(JFHelper.getDataAtual());
    }
    ArrayList<Fornecedor> fnc;
    FornecedorDAO fdao;
    DefaultTableModel t;
    JTextField[] fields;
    JFormattedTextField[] ffields;
    JComboBox[] cbs;
    ProdutoDAO pdao;
    int ids;
    LinkedList<Produto> produtos;

    /**
     *
     * @param dados
     * @param qtd
     */
    private void addInDatabase(LinkedList<Produto> p) throws SQLException {
        Iterator<Produto> pi = p.iterator();
        while (pi.hasNext()) {
            pdao.cadastrar(pi.next());
        }
    }

    /**
     * Adiciona os dados que foram inseridos das caixas na tabela abaixo a
     * partir de um Array Ao mesmo tempo também cria um novo produto e adiciona
     * ele numa LinkedList
     *
     * @param dados Array de dados que serão inseridos na tabela e na LinkedList
     * @param qtd Quantos produtos serão inseridos
     */
    private void addArrayInTable(String[] dados, int qtd) {
        Fornecedor f = fnc.get(jCBFornecedor.getSelectedIndex());
        for (int x = 0; x < qtd; x++) {
            //Criando novo Produto p com os dados inseridos para colocar no LinkedList de Produtos
            Produto p = new Produto(Integer.parseInt(dados[0]),
                    dados[1], Double.parseDouble(dados[2]),
                    dados[3], dados[4], f);
            produtos.add(p);
            dados[2] += "R$";
            t.addRow(dados);
            dados[2] = dados[2].replace("R$", "");
            dados[0] = Integer.parseInt(dados[0]) + 1 + "";
            ids++;
        }
    }

//    public void rowArrayFields(JTextField[] fields){
//        for(int x = 0; x < fields.length; x++){
//            System.out.println(fields[x].getText());
//        }
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTFNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTFPreco = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTFQtd = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jCBFornecedor = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jFTFDataEntrada = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jFTFDataValidade = new javax.swing.JFormattedTextField();
        jBAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jBCadastrar = new javax.swing.JButton();
        jBCancelar = new javax.swing.JButton();
        jBCleanFields = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Nome:");

        jTFNome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTFNome.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        jTFNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFNomeKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Preço:");

        jTFPreco.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTFPreco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        jTFPreco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFPrecoKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Quantidade:");

        jTFQtd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTFQtd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        jTFQtd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFQtdKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Fornecedor:");

        jCBFornecedor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jCBFornecedor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        jCBFornecedor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBFornecedorItemStateChanged(evt);
            }
        });
        jCBFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBFornecedorActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Data Entrada:");

        jFTFDataEntrada.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        try {
            jFTFDataEntrada.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFTFDataEntrada.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFTFDataEntrada.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jFTFDataEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFTFDataEntradaActionPerformed(evt);
            }
        });
        jFTFDataEntrada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFTFDataEntradaKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Data Validade:");

        jFTFDataValidade.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        try {
            jFTFDataValidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFTFDataValidade.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFTFDataValidade.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jFTFDataValidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFTFDataValidadeActionPerformed(evt);
            }
        });
        jFTFDataValidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFTFDataValidadeKeyTyped(evt);
            }
        });

        jBAdd.setFont(new java.awt.Font("Impact", 1, 14)); // NOI18N
        jBAdd.setForeground(new java.awt.Color(0, 153, 0));
        jBAdd.setText("+");
        jBAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAddActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Preço", "D. Entrada", "D. Validade", "Fornecedor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jBCadastrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jBCadastrar.setText("CADASTRAR");
        jBCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCadastrarActionPerformed(evt);
            }
        });

        jBCancelar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jBCancelar.setText("CANCELAR");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        jBCleanFields.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        jBCleanFields.setForeground(new java.awt.Color(102, 102, 102));
        jBCleanFields.setText("Limpar");
        jBCleanFields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCleanFieldsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addComponent(jBCadastrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jBCancelar))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTFNome))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCBFornecedor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jBAdd))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jFTFDataValidade))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jFTFDataEntrada))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jTFPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel3)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTFQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jBCleanFields)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTFNome, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                        .addComponent(jBCleanFields, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTFPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)
                        .addComponent(jTFQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jFTFDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jFTFDataValidade, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jCBFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBAdd))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBCadastrar)
                    .addComponent(jBCancelar))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCBFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBFornecedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBFornecedorActionPerformed

    private void jFTFDataEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFTFDataEntradaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFTFDataEntradaActionPerformed

    private void jFTFDataValidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFTFDataValidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFTFDataValidadeActionPerformed

    private void jBAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAddActionPerformed
        // Fazendo a verificação dos campos com o JFHelper
        if (!JFHelper.verifyAll(fields, ffields, cbs)) {
            try {
                int id;
                // IF para verificar se há algum id no db, caso não haja ele pega o ultimo e
                // soma mais um, para poder fazer uma simulação dos ids antes de os produtos
                // entrarem no db definidamente
                if (pdao.getLastCode() == -1) {
                    id = ids;
                } else {
                    id = pdao.getLastCode() + ids;
                }
                System.out.println(id);
                String[] dados = new String[6];
                dados[0] = id + "";
                dados[1] = jTFNome.getText();
                dados[2] = jTFPreco.getText();
                dados[3] = jFTFDataEntrada.getText();
                dados[4] = jFTFDataValidade.getText();
                dados[5] = fnc.get(jCBFornecedor.getSelectedIndex()).getNome();
                int qtd = Integer.parseInt(jTFQtd.getText());
                addArrayInTable(dados, qtd);

            } catch (SQLException ex) {
                Logger.getLogger(CadProduto.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Complete os campos vazios!", "Campos em branco", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jBAddActionPerformed

    private void jTFNomeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFNomeKeyTyped
        JFHelper.setStandardBorder(jTFNome);
    }//GEN-LAST:event_jTFNomeKeyTyped

    private void jTFPrecoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFPrecoKeyTyped
        JFHelper.onlyNumbers(evt);
        JFHelper.setStandardBorder(jTFPreco);
    }//GEN-LAST:event_jTFPrecoKeyTyped

    private void jTFQtdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFQtdKeyTyped
        JFHelper.onlyNumbers(evt);
        JFHelper.setStandardBorder(jTFQtd);
    }//GEN-LAST:event_jTFQtdKeyTyped

    private void jFTFDataEntradaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFTFDataEntradaKeyTyped
        JFHelper.onlyNumbers(evt);
        JFHelper.setStandardBorder(jFTFDataEntrada);
    }//GEN-LAST:event_jFTFDataEntradaKeyTyped

    private void jFTFDataValidadeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFTFDataValidadeKeyTyped
        JFHelper.onlyNumbers(evt);
        JFHelper.setStandardBorder(jFTFDataValidade);
    }//GEN-LAST:event_jFTFDataValidadeKeyTyped

    private void jCBFornecedorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBFornecedorItemStateChanged
        JFHelper.setStandardBorder(jCBFornecedor);
    }//GEN-LAST:event_jCBFornecedorItemStateChanged

    private void jBCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCadastrarActionPerformed
        if (produtos.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nenhum produto para cadastrar");
        } else {
            int op = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja cadastrar esses produtos?");
            switch (op) {
                case 0: 
                    try {
                        addInDatabase(produtos);
                        JOptionPane.showMessageDialog(this, "Produtos cadastrados com sucesso!");
                        JFHelper.clearFields(ffields, fields);
                        JFHelper.clearTable(t);
                    } catch (SQLException ex) {
                        Logger.getLogger(CadProduto.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    break;
                case 1:
                    JFHelper.clearFields(ffields, fields);
                    JFHelper.clearTable(t);
                    break;
                case 2:    
                    break;
            }
        }
    }//GEN-LAST:event_jBCadastrarActionPerformed

    private void jBCleanFieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCleanFieldsActionPerformed
        JFHelper.clearFields(ffields, fields);
    }//GEN-LAST:event_jBCleanFieldsActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        JFHelper.clearTable(t);
    }//GEN-LAST:event_jBCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    CadProduto dialog = new CadProduto(new javax.swing.JFrame(), true);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(CadProduto.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAdd;
    private javax.swing.JButton jBCadastrar;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBCleanFields;
    private javax.swing.JComboBox<String> jCBFornecedor;
    private javax.swing.JFormattedTextField jFTFDataEntrada;
    private javax.swing.JFormattedTextField jFTFDataValidade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFNome;
    private javax.swing.JTextField jTFPreco;
    private javax.swing.JTextField jTFQtd;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
